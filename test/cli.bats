#!/usr/bin/env bats

load test_helpers

@test "--quiet" {
  run bash ./detect-exploits.sh --quiet --force
  printf '%b\n' "$output"
  [ "$status" -eq 1 ]
  [[ "$output" == "" ]]
}

@test "--force" {
  run bash ./detect-exploits.sh --group=invalidgroup --force "$dir"
  printf '%b\n' "$output"
  [ "$status" -eq 1 ]
  [[ "$output" == *"Group does not exist: invalidgroup"* ]]
}

@test "--version" {
  run bash ./detect-exploits.sh --version
  printf '%b\n' "$output"
  [ "$status" -eq 0 ]
  [[ "$output" == *"detect-exploits.sh v"* ]]
}

@test "--help" {
  run bash ./detect-exploits.sh --help
  printf '%b\n' "$output"
  [ "$status" -eq 0 ]
  [[ "$output" == *"detect-exploits.sh [OPTION]... DIR"* ]]
}

@test "prints help when no arguments are used." {
  run bash ./detect-exploits.sh
  printf '%b\n' "$output"
  [ "$status" -eq 0 ]
  [[ "$output" == *"detect-exploits.sh [OPTION]... DIR"* ]]
}

@test "detect invalid environments" {
  run bash ./detect-exploits.sh --force
  printf '%b\n' "$output"
  [ "$status" -eq 1 ]
  [[ "$output" == *"Could not find a valid project root in: ."* ]]
}

@test "allows bundled option flags" {
  run bash ./detect-exploits.sh -qf
  printf '%b\n' "$output"
  [ "$status" -eq 1 ]
  [[ "$output" == "" ]]
}
